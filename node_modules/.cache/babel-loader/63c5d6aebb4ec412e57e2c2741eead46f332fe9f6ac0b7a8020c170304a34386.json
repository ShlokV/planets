{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shlok\\\\Desktop\\\\planet\\\\planets\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [response, setResponse] = useState({});\n  const [pagination, setPagination] = useState({});\n  useEffect(() => {\n    fetch(\"https://swapi.dev/api/planets\").then(response => response.json()).then(data => {\n      setResponse(data);\n      setPagination(data.count / data.results.length);\n    }).catch(error => console.log(error));\n  }, []);\n  const callCurrentSelectedPage = page => {\n    let url = `https://swapi.dev/api/planets/?page=${page}`;\n    console.log(url);\n    fetch(url).then(response => response.json()).then(data => {\n      console.log(data);\n    }).catch(error => console.log(error));\n  };\n  const createPagination = () => {\n    let buttons = [];\n    for (let i = 1; i <= pagination; i++) {\n      buttons.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => callCurrentSelectedPage(i),\n        children: i\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this));\n    }\n    return buttons;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: ((response === null || response === void 0 ? void 0 : response.results) || []).map((planet, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: planet.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: createPagination()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"gc7mplFeJf9KEv3hJ0mSxKgFRUw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","response","setResponse","pagination","setPagination","fetch","then","json","data","count","results","length","catch","error","console","log","callCurrentSelectedPage","page","url","createPagination","buttons","i","push","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","map","planet","index","name","_c","$RefreshReg$"],"sources":["C:/Users/shlok/Desktop/planet/planets/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [response, setResponse] = useState({});\n  const [pagination, setPagination] = useState({});\n\n  useEffect(() => {\n    fetch(\"https://swapi.dev/api/planets\")\n      .then((response) => response.json())\n      .then((data) => {\n        setResponse(data);\n        setPagination(data.count / data.results.length);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  const callCurrentSelectedPage = (page) => {\n    let url = `https://swapi.dev/api/planets/?page=${page}`;\n\n    console.log(url);\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const createPagination = () => {\n    let buttons = [];\n    for (let i = 1; i <= pagination; i++) {\n      buttons.push(\n        <button onClick={() => callCurrentSelectedPage(i)}>{i}</button>\n      );\n    }\n    return buttons;\n  };\n\n  return (\n    <>\n      <div>\n        {(response?.results || []).map((planet, index) => (\n          <div>{planet.name}</div>\n        ))}\n      </div>\n      <div>{createPagination()}</div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,+BAA+B,CAAC,CACnCC,IAAI,CAAEL,QAAQ,IAAKA,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAC,CACnCD,IAAI,CAAEE,IAAI,IAAK;MACdN,WAAW,CAACM,IAAI,CAAC;MACjBJ,aAAa,CAACI,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACE,OAAO,CAACC,MAAM,CAAC;IACjD,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,uBAAuB,GAAIC,IAAI,IAAK;IACxC,IAAIC,GAAG,GAAI,uCAAsCD,IAAK,EAAC;IAEvDH,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;IAChBb,KAAK,CAACa,GAAG,CAAC,CACPZ,IAAI,CAAEL,QAAQ,IAAKA,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAC,CACnCD,IAAI,CAAEE,IAAI,IAAK;MACdM,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;IACnB,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACzC,CAAC;EAED,MAAMM,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIC,OAAO,GAAG,EAAE;IAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIlB,UAAU,EAAEkB,CAAC,EAAE,EAAE;MACpCD,OAAO,CAACE,IAAI,eACV1B,OAAA;QAAQ2B,OAAO,EAAEA,CAAA,KAAMP,uBAAuB,CAACK,CAAC,CAAE;QAAAG,QAAA,EAAEH;MAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAChE,CAAC;IACH;IACA,OAAOR,OAAO;EAChB,CAAC;EAED,oBACExB,OAAA,CAAAE,SAAA;IAAA0B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,EACG,CAAC,CAAAvB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAES,OAAO,KAAI,EAAE,EAAEmB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC3CnC,OAAA;QAAA4B,QAAA,EAAMM,MAAM,CAACE;MAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CACxB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNhC,OAAA;MAAA4B,QAAA,EAAML,gBAAgB,CAAC;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA,eAC/B,CAAC;AAEP;AAAC5B,EAAA,CA9CQD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAgDZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}