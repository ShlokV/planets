{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shlok\\\\Desktop\\\\planet\\\\planets\\\\src\\\\components\\\\Planets.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport PaginationButton from \"./PaginationButton\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/planets.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Planets = () => {\n  _s();\n  const [response, setResponse] = useState({});\n  const [totalPages, setTotalPages] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const navigate = useNavigate();\n  const getPlanets = () => {\n    try {\n      fetch(\"https://swapi.dev/api/planets\").then(response => response.json()).then(data => {\n        setResponse(data);\n        setTotalPages(Math.ceil(data.count / data.results.length));\n      });\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  const getPlanetsByPage = page => {\n    try {\n      fetch(`https://swapi.dev/api/planets/?page=${page}`).then(response => response.json()).then(data => {\n        setResponse(data);\n        setCurrentPage(page);\n      });\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  useEffect(() => {\n    getPlanets();\n  }, []);\n  const paginationButtons = () => {\n    const buttons = [];\n    for (let iterator = 1; iterator <= totalPages; iterator++) {\n      buttons.push( /*#__PURE__*/_jsxDEV(PaginationButton, {\n        onClick: () => getPlanetsByPage(iterator),\n        pageNumber: iterator\n      }, iterator, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this));\n    }\n    return buttons;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid planet-home\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: \"Planets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planets-container\",\n          children: response.results && response.results.map(planet => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"planet-card\",\n            onClick: () => navigate(`/residents`, {\n              state: {\n                residents: planet.residents\n              }\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: planet.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Population: \", planet.population]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Climate: \", planet.climate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Terrain: \", planet.terrain]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this)]\n          }, planet.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-area\",\n          children: /*#__PURE__*/_jsxDEV(PaginationButton, {\n            totalPages: totalPages,\n            onPageChange: getPlanetsByPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Planets, \"dTJ7toWK7e12lTRUxGLw7XVju2k=\", false, function () {\n  return [useNavigate];\n});\n_c = Planets;\nexport default Planets;\nvar _c;\n$RefreshReg$(_c, \"Planets\");","map":{"version":3,"names":["React","useEffect","useState","PaginationButton","useNavigate","jsxDEV","_jsxDEV","Planets","_s","response","setResponse","totalPages","setTotalPages","currentPage","setCurrentPage","navigate","getPlanets","fetch","then","json","data","Math","ceil","count","results","length","error","console","message","getPlanetsByPage","page","paginationButtons","buttons","iterator","push","onClick","pageNumber","fileName","_jsxFileName","lineNumber","columnNumber","className","children","map","planet","state","residents","name","population","climate","terrain","onPageChange","_c","$RefreshReg$"],"sources":["C:/Users/shlok/Desktop/planet/planets/src/components/Planets.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PaginationButton from \"./PaginationButton\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/planets.css\";\n\nconst Planets = () => {\n  const [response, setResponse] = useState({});\n  const [totalPages, setTotalPages] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const navigate = useNavigate();\n\n  const getPlanets = () => {\n    try {\n      fetch(\"https://swapi.dev/api/planets\")\n        .then((response) => response.json())\n        .then((data) => {\n          setResponse(data);\n          setTotalPages(Math.ceil(data.count / data.results.length));\n        });\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const getPlanetsByPage = (page) => {\n    try {\n      fetch(`https://swapi.dev/api/planets/?page=${page}`)\n        .then((response) => response.json())\n        .then((data) => {\n          setResponse(data);\n          setCurrentPage(page);\n        });\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getPlanets();\n  }, []);\n\n  const paginationButtons = () => {\n    const buttons = [];\n    for (let iterator = 1; iterator <= totalPages; iterator++) {\n      buttons.push(\n        <PaginationButton\n          key={iterator}\n          onClick={() => getPlanetsByPage(iterator)}\n          pageNumber={iterator}\n        />\n      );\n    }\n    return buttons;\n  };\n\n  return (\n    <div className=\"container-fluid planet-home\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"header\">Planets</div>\n          <div className=\"planets-container\">\n            {response.results &&\n              response.results.map((planet) => (\n                <div\n                  key={planet.name}\n                  className=\"planet-card\"\n                  onClick={() =>\n                    navigate(`/residents`, {\n                      state: { residents: planet.residents },\n                    })\n                  }\n                >\n                  <h3>{planet.name}</h3>\n                  <p>Population: {planet.population}</p>\n                  <p>Climate: {planet.climate}</p>\n                  <p>Terrain: {planet.terrain}</p>\n                </div>\n              ))}\n          </div>\n          <div className=\"pagination-area\">\n            <PaginationButton\n              totalPages={totalPages}\n              onPageChange={getPlanetsByPage}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Planets;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}