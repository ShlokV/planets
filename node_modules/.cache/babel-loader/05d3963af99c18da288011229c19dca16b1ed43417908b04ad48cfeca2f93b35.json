{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shlok\\\\Desktop\\\\planet\\\\planets\\\\src\\\\components\\\\Planets.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport PaginationButton from \"./PaginationButton\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/planets.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Planets = () => {\n  _s();\n  const [response, setResponse] = useState({});\n  const [totalPages, setTotalPages] = useState(0);\n  const navigate = useNavigate();\n  const getPlanets = () => {\n    try {\n      fetch(\"https://swapi.dev/api/planets\").then(response => response.json()).then(data => {\n        setResponse(data);\n        setTotalPages(data.count / data.results.length);\n        console.log(data);\n      });\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  const getPlanetsByPage = page => {\n    try {\n      fetch(`https://swapi.dev/api/planets/?page=${page}`).then(response => response.json()).then(data => {\n        setResponse(data);\n      });\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  const paginationButtons = () => {\n    const buttons = [];\n    for (let iterator = 1; iterator <= totalPages; iterator++) {\n      buttons.push( /*#__PURE__*/_jsxDEV(PaginationButton, {\n        onClick: () => getPlanetsByPage(iterator),\n        pageNumber: iterator\n      }, iterator, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this));\n    }\n    return buttons;\n  };\n  useEffect(() => {\n    getPlanets();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container planet-home\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header\",\n            children: \"Planets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"planets-container\",\n            children: response.results && response.results.map(planet => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"planet-card\",\n              onClick: () => navigate(`/residents`, {\n                state: {\n                  residents: planet.residents\n                }\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: planet.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Population: \", planet.population]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Climate: \", planet.climate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Terrain: \", planet.terrain]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this)]\n            }, planet.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pagination-area\",\n            children: paginationButtons()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Planets, \"vstfpOZpqBLVLBvtNlkw95if5gI=\", false, function () {\n  return [useNavigate];\n});\n_c = Planets;\nexport default Planets;\nvar _c;\n$RefreshReg$(_c, \"Planets\");","map":{"version":3,"names":["React","useEffect","useState","PaginationButton","useNavigate","jsxDEV","_jsxDEV","Planets","_s","response","setResponse","totalPages","setTotalPages","navigate","getPlanets","fetch","then","json","data","count","results","length","console","log","error","message","getPlanetsByPage","page","paginationButtons","buttons","iterator","push","onClick","pageNumber","fileName","_jsxFileName","lineNumber","columnNumber","className","children","map","planet","state","residents","name","population","climate","terrain","_c","$RefreshReg$"],"sources":["C:/Users/shlok/Desktop/planet/planets/src/components/Planets.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PaginationButton from \"./PaginationButton\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/planets.css\";\n\nconst Planets = () => {\n  const [response, setResponse] = useState({});\n  const [totalPages, setTotalPages] = useState(0);\n  const navigate = useNavigate();\n\n  const getPlanets = () => {\n    try {\n      fetch(\"https://swapi.dev/api/planets\")\n        .then((response) => response.json())\n        .then((data) => {\n          setResponse(data);\n          setTotalPages(data.count / data.results.length);\n          console.log(data);\n        });\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const getPlanetsByPage = (page) => {\n    try {\n      fetch(`https://swapi.dev/api/planets/?page=${page}`)\n        .then((response) => response.json())\n        .then((data) => {\n          setResponse(data);\n        });\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const paginationButtons = () => {\n    const buttons = [];\n    for (let iterator = 1; iterator <= totalPages; iterator++) {\n      buttons.push(\n        <PaginationButton\n          key={iterator}\n          onClick={() => getPlanetsByPage(iterator)}\n          pageNumber={iterator}\n        />\n      );\n    }\n    return buttons;\n  };\n\n  useEffect(() => {\n    getPlanets();\n  }, []);\n\n  return (\n    <div className=\"container planet-home\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"\">\n            <div className=\"header\">Planets</div>\n            <div className=\"planets-container\">\n              {response.results &&\n                response.results.map((planet) => (\n                  <div\n                    key={planet.name}\n                    className=\"planet-card\"\n                    onClick={() =>\n                      navigate(`/residents`, {\n                        state: { residents: planet.residents },\n                      })\n                    }\n                  >\n                    <h3>{planet.name}</h3>\n                    <p>Population: {planet.population}</p>\n                    <p>Climate: {planet.climate}</p>\n                    <p>Terrain: {planet.terrain}</p>\n                  </div>\n                ))}\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"pagination-area\">{paginationButtons()}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Planets;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}